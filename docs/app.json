[{"name": "app.py", "content": "# Import data from shared.py\nfrom shared import app_dir, df\nimport plotly.express as px\nfrom shiny import reactive\nfrom shiny.express import input, render, ui\nfrom shinywidgets import render_widget  \nimport seaborn as sns\n\n\nui.page_opts(title=ui.h1(\"Philip's Penguins\", style=\"text-align: center;\"), fillable=True)\n\n\nwith ui.sidebar(title=ui.h2(\"Display Controls\"), width=\"400px\"):\n    # Input for selecting the type of plot\n    ui.input_select(\"plot\", \"Plot Type\", [\"Scatterplot\", \"Histogram\"])\n    \n    # Input for selecting the x-axis variable for all plots\n    ui.input_select(\"xaxis\", \"X-axis (all plots)\", [\"bill_length_mm\", \"bill_depth_mm\", \"body_mass_g\"], selected=\"bill_length_mm\")\n    \n    # Input for selecting the y-axis variable for scatterplots\n    ui.input_select(\"yaxis\", \"Y-axis (Scatterplot & Violin)\", [\"bill_length_mm\", \"bill_depth_mm\", \"body_mass_g\"], selected=\"bill_depth_mm\")\n    \n    # Input for selecting the hue control variable\n    ui.input_select(\"hue_control\", \"Hue Control\", [\"sex\", \"species\", \"island\"], selected=\"species\")\n    \n    # Input slider for selecting the number of bins for histograms\n    ui.input_slider(\"bins\", \"Number of bins (histogram)\", 5, 50, 20, post=\" bins\")\n\n    # Input slider for the secondary plot\n    ui.input_select(\"secondary_plot\", \"Secondary Plot\", [\"Correlation Heatmap\", \"Violin Plot\"], selected=\"Correlation Heatmap\")\n\n    ui.hr()\n\n    ui.h2(\"Filter Controls\")\n    \n    # Switch for enabling/disabling data filtering\n    ui.input_switch(\"filter\", \"Filter Data\", True)\n    \n    # Input slider for filtering by body mass\n    ui.input_slider(\"mass\", \"Body Mass (g)\", 2000, 6000, [2000,6000], post=\" g\")\n    \n    # Input slider for filtering by bill depth\n    ui.input_slider(\"bill_depth\", \"Bill Depth (mm)\", 10, 25, [10, 25], post=\" mm\")\n    \n    # Input slider for filtering by bill length\n    ui.input_slider(\"bill_length\", \"Bill Length (mm)\", 30, 60, [30, 60], post=\" mm\")\n    \n    # Checkbox group for filtering by sex\n    ui.input_checkbox_group(\n        \"sex\",\n        \"Sex\",\n        [\"Male\", \"Female\"],\n        selected=[\"Male\", \"Female\"],\n        inline=True,\n    )\n    \n    # Checkbox group for filtering by species\n    ui.input_checkbox_group(\n        \"species\",\n        \"Species\",\n        [\"Adelie\", \"Gentoo\", \"Chinstrap\"],\n        selected=[\"Adelie\", \"Gentoo\", \"Chinstrap\"],\n        inline=True,\n    )\n    \n    # Checkbox group for filtering by island\n    ui.input_checkbox_group(\n        \"island\",\n        \"Island\",\n        [\"Biscoe\", \"Dream\", \"Torgersen\"],\n        selected=[\"Biscoe\", \"Dream\", \"Torgersen\"],\n        inline=True,\n    )   \n\n\n\n    # Link to GitHub repository\n    ui.a(\"GitHub\", href=\"https://github.com/drpafowler/cintel-02-data\", target=\"_blank\")\n\n\n\nwith ui.layout_column_wrap(fill=False):\n    with ui.value_box():\n        ui.h4(\"Dynamic Text1\", style=\"color: white;\")\n\n        @render.text\n        def count():\n            # Display the number of penguins in the filtered dataset\n            return f\"{filtered_df().shape[0]} penguins\"\n\n    with ui.value_box():\n        ui.h4(\"Dynamic Text2\", style=\"color: white;\")\n        \n        @render.text\n        def dynamic_text2():\n            # Display average bill length for scatterplot or average of selected x-axis variable for histogram\n            if input.plot() == \"Scatterplot\":\n                return f\"Average bill length: {filtered_df()['bill_length_mm'].mean():.1f} mm\"\n            elif input.plot() == \"Histogram\":\n                if input.xaxis() == \"bill_depth_mm\":\n                    return f\"Average bill depth: {filtered_df()['bill_depth_mm'].mean():.1f} mm\"\n                elif input.xaxis() == \"bill_length_mm\":\n                    return f\"Average bill length: {filtered_df()['bill_length_mm'].mean():.1f} mm\"\n                elif input.xaxis() == \"body_mass_g\":\n                    return f\"Average body mass: {filtered_df()['body_mass_g'].mean():.1f} g\"\n            return \"Select a valid plot type and x-axis\"\n\n    with ui.value_box():\n        ui.h4(\"Dynamic Text3\", style=\"color: white;\")\n        \n        @render.text\n        def dynamic_text3():\n            # Display average bill depth for scatterplot or median of selected x-axis variable for histogram\n            if input.plot() == \"Scatterplot\":\n                return f\"Average bill depth: {filtered_df()['bill_depth_mm'].mean():.1f} mm\"\n            elif input.plot() == \"Histogram\":\n                if input.xaxis() == \"bill_depth_mm\":\n                    return f\"Median bill depth: {filtered_df()['bill_depth_mm'].median():.1f} mm\"\n                elif input.xaxis() == \"bill_length_mm\":\n                    return f\"Median bill length: {filtered_df()['bill_length_mm'].median():.1f} mm\"\n                elif input.xaxis() == \"body_mass_g\":\n                    return f\"Median body mass: {filtered_df()['body_mass_g'].median():.1f} g\"\n            return \"Select a valid plot type and x-axis\"\n    \n    with ui.value_box():\n        ui.h4(\"Dynamic Text4\", style=\"color: white;\")\n\n        @render.text\n        def dynamic_text4():\n            # Display average body mass for scatterplot or range of selected x-axis variable for histogram\n            if input.plot() == \"Scatterplot\":\n                return f\"Average body mass: {filtered_df()['body_mass_g'].mean():.1f} g\"\n            elif input.plot() == \"Histogram\":\n                if input.xaxis() == \"bill_length_mm\":\n                    return f\"Range of bill length: {filtered_df()['bill_length_mm'].min():.1f} mm - {filtered_df()['bill_length_mm'].max():.1f} mm\"\n                elif input.xaxis() == \"bill_depth_mm\":\n                    return f\"Range of bill depth: {filtered_df()['bill_depth_mm'].min():.1f} mm - {filtered_df()['bill_depth_mm'].max():.1f} mm\"\n                elif input.xaxis() == \"body_mass_g\":\n                    return f\"Range of body mass: {filtered_df()['body_mass_g'].min():.1f} g - {filtered_df()['body_mass_g'].max():.1f} g\"\n            return \"Select a valid plot type and x-axis\"\n\nwith ui.layout_columns():\n    with ui.card(full_screen=True):\n        ui.card_header(\"Seaborn Penguin Data Visualisation\")\n\n        @render.plot\n        def length_depth():\n            # Check if the selected plot type is Scatterplot\n            if input.plot() == \"Scatterplot\":\n                # If filtering is enabled, use filtered data\n                if input.filter():\n                    return sns.scatterplot(\n                        data=filtered_df(),\n                        x=input.xaxis(),\n                        y=input.yaxis(),\n                        hue=input.hue_control(),\n                    )\n                # If filtering is disabled, use unfiltered data\n                else:\n                    return sns.scatterplot(\n                        data=filtered_df(),\n                        x=input.xaxis(),\n                        y=input.yaxis(),\n                    )\n            # Check if the selected plot type is Histogram\n            elif input.plot() == \"Histogram\":\n                # If filtering is enabled, use filtered data\n                if input.filter():\n                    return sns.histplot(\n                        data=filtered_df(),\n                        x=input.xaxis(),\n                        bins=input.bins(),\n                        hue=input.hue_control(),\n                        kde=True,\n                        multiple=\"stack\",\n                    )\n                # If filtering is disabled, use unfiltered data\n                else:\n                    return sns.histplot(\n                        data=filtered_df(),\n                        x=input.xaxis(),\n                        bins=input.bins(),\n                        kde=True,\n                    )\n\n    with ui.card(full_screen=True):\n        ui.card_header(\"Plotly Penguin Data Visualisation\")\n\n        @render_widget\n        def plotly_plot():\n            # Check if the selected plot type is Scatterplot\n            if input.plot() == \"Scatterplot\":\n                # If filtering is enabled, use filtered data\n                if input.filter():\n                    fig = px.scatter(\n                        filtered_df(),\n                        x=input.xaxis(),\n                        y=input.yaxis(),\n                        color=input.hue_control(),\n                        title=\"Scatterplot of Penguin Data\"\n                    )\n                # If filtering is disabled, use unfiltered data\n                else:\n                    fig = px.scatter(\n                        filtered_df(),\n                        x=input.xaxis(),\n                        y=input.yaxis(),\n                        title=\"Scatterplot of Penguin Data\"\n                    )\n            # Check if the selected plot type is Histogram\n            elif input.plot() == \"Histogram\":\n                # If filtering is enabled, use filtered data\n                if input.filter():\n                    fig = px.histogram(\n                        filtered_df(),\n                        x=input.xaxis(),\n                        color=input.hue_control(),\n                        marginal=\"box\",\n                        title=\"Histogram of Penguin Data\",\n                        nbins=input.bins()\n                    )\n                # If filtering is disabled, use unfiltered data\n                else:\n                    fig = px.histogram(\n                        filtered_df(),\n                        x=input.xaxis(),\n                        marginal=\"box\",\n                        title=\"Histogram of Penguin Data\",\n                        nbins=input.bins()\n                    )\n            return fig\n\n\nwith ui.layout_columns():\n\n    with ui.card(full_screen=True):\n        # Card header for the data table\n        ui.card_header(\"Penguin data\")\n        # Switch to toggle the display of the data table\n        ui.input_switch(\"show_table\", \"Switch on to show a data table\", False)\n        \n        @render.data_frame\n        def summary_statistics():\n            # Columns to be displayed in the data table\n            cols = [\n                \"species\",\n                \"island\",\n                \"bill_length_mm\",\n                \"bill_depth_mm\",\n                \"body_mass_g\",\n                \"sex\",\n            ]\n            # Render the data table if the switch is on, otherwise render a data grid\n            if input.show_table():\n                return render.DataTable(filtered_df()[cols], filters=True)\n            else:\n                return render.DataGrid(filtered_df()[cols], filters=True)\n\n    with ui.card(full_screen=True):\n        # Card header for the correlation heatmap\n        ui.card_header(\"Secondary Plots\")\n        \n        @render.plot\n        def secondary_plots():\n            if input.secondary_plot() == \"Correlation Heatmap\":\n                # Columns to be used for the correlation heatmap\n                cols = [\"bill_length_mm\", \"bill_depth_mm\", \"body_mass_g\"]\n                # Calculate the correlation matrix\n                corr = filtered_df()[cols].corr()\n                # Render the heatmap with annotations and a color map\n                return sns.heatmap(corr, annot=True, cmap=\"coolwarm\", vmin=-1, vmax=1)\n            elif input.secondary_plot() == \"Violin Plot\":\n                # Render the violin plot\n                return sns.violinplot(\n                    data=filtered_df(),\n                    x=\"species\",\n                    hue=input.hue_control(),\n                    y=input.yaxis(),\n                    inner=\"quartile\"\n                )\n\n# Include custom CSS styles\nui.include_css(app_dir / \"styles.css\")\n\n\n@reactive.calc\ndef filtered_df():\n    # If filtering is not enabled, return the original dataframe\n    if not input.filter():\n        return df\n    \n    # Filter the dataframe based on selected species\n    filt_df = df[df[\"species\"].isin(input.species())]\n    \n    # Further filter the dataframe based on selected sex\n    filt_df = filt_df[filt_df[\"sex\"].isin(input.sex())]\n    \n    # Further filter the dataframe based on selected island\n    filt_df = filt_df[filt_df[\"island\"].isin(input.island())]\n    \n    # Further filter the dataframe based on selected body mass range\n    filt_df = filt_df.loc[(filt_df[\"body_mass_g\"] >= input.mass()[0]) & (filt_df[\"body_mass_g\"] <= input.mass()[1])]\n    \n    # Further filter the dataframe based on selected bill depth range\n    filt_df = filt_df.loc[(filt_df[\"bill_depth_mm\"] >= input.bill_depth()[0]) & (filt_df[\"bill_depth_mm\"] <= input.bill_depth()[1])]\n    \n    # Further filter the dataframe based on selected bill length range\n    filt_df = filt_df.loc[(filt_df[\"bill_length_mm\"] >= input.bill_length()[0]) & (filt_df[\"bill_length_mm\"] <= input.bill_length()[1])]\n    \n    # Return the filtered dataframe\n    return filt_df\n\n\n", "type": "text"}, {"name": "penguins.csv", "content": "species,island,bill_length_mm,bill_depth_mm,flipper_length_mm,body_mass_g,sex\nAdelie,Torgersen,39.1,18.7,181.0,3750.0,Male\nAdelie,Torgersen,39.5,17.4,186.0,3800.0,Female\nAdelie,Torgersen,40.3,18.0,195.0,3250.0,Female\nAdelie,Torgersen,,,,,\nAdelie,Torgersen,36.7,19.3,193.0,3450.0,Female\nAdelie,Torgersen,39.3,20.6,190.0,3650.0,Male\nAdelie,Torgersen,38.9,17.8,181.0,3625.0,Female\nAdelie,Torgersen,39.2,19.6,195.0,4675.0,Male\nAdelie,Torgersen,34.1,18.1,193.0,3475.0,\nAdelie,Torgersen,42.0,20.2,190.0,4250.0,\nAdelie,Torgersen,37.8,17.1,186.0,3300.0,\nAdelie,Torgersen,37.8,17.3,180.0,3700.0,\nAdelie,Torgersen,41.1,17.6,182.0,3200.0,Female\nAdelie,Torgersen,38.6,21.2,191.0,3800.0,Male\nAdelie,Torgersen,34.6,21.1,198.0,4400.0,Male\nAdelie,Torgersen,36.6,17.8,185.0,3700.0,Female\nAdelie,Torgersen,38.7,19.0,195.0,3450.0,Female\nAdelie,Torgersen,42.5,20.7,197.0,4500.0,Male\nAdelie,Torgersen,34.4,18.4,184.0,3325.0,Female\nAdelie,Torgersen,46.0,21.5,194.0,4200.0,Male\nAdelie,Biscoe,37.8,18.3,174.0,3400.0,Female\nAdelie,Biscoe,37.7,18.7,180.0,3600.0,Male\nAdelie,Biscoe,35.9,19.2,189.0,3800.0,Female\nAdelie,Biscoe,38.2,18.1,185.0,3950.0,Male\nAdelie,Biscoe,38.8,17.2,180.0,3800.0,Male\nAdelie,Biscoe,35.3,18.9,187.0,3800.0,Female\nAdelie,Biscoe,40.6,18.6,183.0,3550.0,Male\nAdelie,Biscoe,40.5,17.9,187.0,3200.0,Female\nAdelie,Biscoe,37.9,18.6,172.0,3150.0,Female\nAdelie,Biscoe,40.5,18.9,180.0,3950.0,Male\nAdelie,Dream,39.5,16.7,178.0,3250.0,Female\nAdelie,Dream,37.2,18.1,178.0,3900.0,Male\nAdelie,Dream,39.5,17.8,188.0,3300.0,Female\nAdelie,Dream,40.9,18.9,184.0,3900.0,Male\nAdelie,Dream,36.4,17.0,195.0,3325.0,Female\nAdelie,Dream,39.2,21.1,196.0,4150.0,Male\nAdelie,Dream,38.8,20.0,190.0,3950.0,Male\nAdelie,Dream,42.2,18.5,180.0,3550.0,Female\nAdelie,Dream,37.6,19.3,181.0,3300.0,Female\nAdelie,Dream,39.8,19.1,184.0,4650.0,Male\nAdelie,Dream,36.5,18.0,182.0,3150.0,Female\nAdelie,Dream,40.8,18.4,195.0,3900.0,Male\nAdelie,Dream,36.0,18.5,186.0,3100.0,Female\nAdelie,Dream,44.1,19.7,196.0,4400.0,Male\nAdelie,Dream,37.0,16.9,185.0,3000.0,Female\nAdelie,Dream,39.6,18.8,190.0,4600.0,Male\nAdelie,Dream,41.1,19.0,182.0,3425.0,Male\nAdelie,Dream,37.5,18.9,179.0,2975.0,\nAdelie,Dream,36.0,17.9,190.0,3450.0,Female\nAdelie,Dream,42.3,21.2,191.0,4150.0,Male\nAdelie,Biscoe,39.6,17.7,186.0,3500.0,Female\nAdelie,Biscoe,40.1,18.9,188.0,4300.0,Male\nAdelie,Biscoe,35.0,17.9,190.0,3450.0,Female\nAdelie,Biscoe,42.0,19.5,200.0,4050.0,Male\nAdelie,Biscoe,34.5,18.1,187.0,2900.0,Female\nAdelie,Biscoe,41.4,18.6,191.0,3700.0,Male\nAdelie,Biscoe,39.0,17.5,186.0,3550.0,Female\nAdelie,Biscoe,40.6,18.8,193.0,3800.0,Male\nAdelie,Biscoe,36.5,16.6,181.0,2850.0,Female\nAdelie,Biscoe,37.6,19.1,194.0,3750.0,Male\nAdelie,Biscoe,35.7,16.9,185.0,3150.0,Female\nAdelie,Biscoe,41.3,21.1,195.0,4400.0,Male\nAdelie,Biscoe,37.6,17.0,185.0,3600.0,Female\nAdelie,Biscoe,41.1,18.2,192.0,4050.0,Male\nAdelie,Biscoe,36.4,17.1,184.0,2850.0,Female\nAdelie,Biscoe,41.6,18.0,192.0,3950.0,Male\nAdelie,Biscoe,35.5,16.2,195.0,3350.0,Female\nAdelie,Biscoe,41.1,19.1,188.0,4100.0,Male\nAdelie,Torgersen,35.9,16.6,190.0,3050.0,Female\nAdelie,Torgersen,41.8,19.4,198.0,4450.0,Male\nAdelie,Torgersen,33.5,19.0,190.0,3600.0,Female\nAdelie,Torgersen,39.7,18.4,190.0,3900.0,Male\nAdelie,Torgersen,39.6,17.2,196.0,3550.0,Female\nAdelie,Torgersen,45.8,18.9,197.0,4150.0,Male\nAdelie,Torgersen,35.5,17.5,190.0,3700.0,Female\nAdelie,Torgersen,42.8,18.5,195.0,4250.0,Male\nAdelie,Torgersen,40.9,16.8,191.0,3700.0,Female\nAdelie,Torgersen,37.2,19.4,184.0,3900.0,Male\nAdelie,Torgersen,36.2,16.1,187.0,3550.0,Female\nAdelie,Torgersen,42.1,19.1,195.0,4000.0,Male\nAdelie,Torgersen,34.6,17.2,189.0,3200.0,Female\nAdelie,Torgersen,42.9,17.6,196.0,4700.0,Male\nAdelie,Torgersen,36.7,18.8,187.0,3800.0,Female\nAdelie,Torgersen,35.1,19.4,193.0,4200.0,Male\nAdelie,Dream,37.3,17.8,191.0,3350.0,Female\nAdelie,Dream,41.3,20.3,194.0,3550.0,Male\nAdelie,Dream,36.3,19.5,190.0,3800.0,Male\nAdelie,Dream,36.9,18.6,189.0,3500.0,Female\nAdelie,Dream,38.3,19.2,189.0,3950.0,Male\nAdelie,Dream,38.9,18.8,190.0,3600.0,Female\nAdelie,Dream,35.7,18.0,202.0,3550.0,Female\nAdelie,Dream,41.1,18.1,205.0,4300.0,Male\nAdelie,Dream,34.0,17.1,185.0,3400.0,Female\nAdelie,Dream,39.6,18.1,186.0,4450.0,Male\nAdelie,Dream,36.2,17.3,187.0,3300.0,Female\nAdelie,Dream,40.8,18.9,208.0,4300.0,Male\nAdelie,Dream,38.1,18.6,190.0,3700.0,Female\nAdelie,Dream,40.3,18.5,196.0,4350.0,Male\nAdelie,Dream,33.1,16.1,178.0,2900.0,Female\nAdelie,Dream,43.2,18.5,192.0,4100.0,Male\nAdelie,Biscoe,35.0,17.9,192.0,3725.0,Female\nAdelie,Biscoe,41.0,20.0,203.0,4725.0,Male\nAdelie,Biscoe,37.7,16.0,183.0,3075.0,Female\nAdelie,Biscoe,37.8,20.0,190.0,4250.0,Male\nAdelie,Biscoe,37.9,18.6,193.0,2925.0,Female\nAdelie,Biscoe,39.7,18.9,184.0,3550.0,Male\nAdelie,Biscoe,38.6,17.2,199.0,3750.0,Female\nAdelie,Biscoe,38.2,20.0,190.0,3900.0,Male\nAdelie,Biscoe,38.1,17.0,181.0,3175.0,Female\nAdelie,Biscoe,43.2,19.0,197.0,4775.0,Male\nAdelie,Biscoe,38.1,16.5,198.0,3825.0,Female\nAdelie,Biscoe,45.6,20.3,191.0,4600.0,Male\nAdelie,Biscoe,39.7,17.7,193.0,3200.0,Female\nAdelie,Biscoe,42.2,19.5,197.0,4275.0,Male\nAdelie,Biscoe,39.6,20.7,191.0,3900.0,Female\nAdelie,Biscoe,42.7,18.3,196.0,4075.0,Male\nAdelie,Torgersen,38.6,17.0,188.0,2900.0,Female\nAdelie,Torgersen,37.3,20.5,199.0,3775.0,Male\nAdelie,Torgersen,35.7,17.0,189.0,3350.0,Female\nAdelie,Torgersen,41.1,18.6,189.0,3325.0,Male\nAdelie,Torgersen,36.2,17.2,187.0,3150.0,Female\nAdelie,Torgersen,37.7,19.8,198.0,3500.0,Male\nAdelie,Torgersen,40.2,17.0,176.0,3450.0,Female\nAdelie,Torgersen,41.4,18.5,202.0,3875.0,Male\nAdelie,Torgersen,35.2,15.9,186.0,3050.0,Female\nAdelie,Torgersen,40.6,19.0,199.0,4000.0,Male\nAdelie,Torgersen,38.8,17.6,191.0,3275.0,Female\nAdelie,Torgersen,41.5,18.3,195.0,4300.0,Male\nAdelie,Torgersen,39.0,17.1,191.0,3050.0,Female\nAdelie,Torgersen,44.1,18.0,210.0,4000.0,Male\nAdelie,Torgersen,38.5,17.9,190.0,3325.0,Female\nAdelie,Torgersen,43.1,19.2,197.0,3500.0,Male\nAdelie,Dream,36.8,18.5,193.0,3500.0,Female\nAdelie,Dream,37.5,18.5,199.0,4475.0,Male\nAdelie,Dream,38.1,17.6,187.0,3425.0,Female\nAdelie,Dream,41.1,17.5,190.0,3900.0,Male\nAdelie,Dream,35.6,17.5,191.0,3175.0,Female\nAdelie,Dream,40.2,20.1,200.0,3975.0,Male\nAdelie,Dream,37.0,16.5,185.0,3400.0,Female\nAdelie,Dream,39.7,17.9,193.0,4250.0,Male\nAdelie,Dream,40.2,17.1,193.0,3400.0,Female\nAdelie,Dream,40.6,17.2,187.0,3475.0,Male\nAdelie,Dream,32.1,15.5,188.0,3050.0,Female\nAdelie,Dream,40.7,17.0,190.0,3725.0,Male\nAdelie,Dream,37.3,16.8,192.0,3000.0,Female\nAdelie,Dream,39.0,18.7,185.0,3650.0,Male\nAdelie,Dream,39.2,18.6,190.0,4250.0,Male\nAdelie,Dream,36.6,18.4,184.0,3475.0,Female\nAdelie,Dream,36.0,17.8,195.0,3450.0,Female\nAdelie,Dream,37.8,18.1,193.0,3750.0,Male\nAdelie,Dream,36.0,17.1,187.0,3700.0,Female\nAdelie,Dream,41.5,18.5,201.0,4000.0,Male\nChinstrap,Dream,46.5,17.9,192.0,3500.0,Female\nChinstrap,Dream,50.0,19.5,196.0,3900.0,Male\nChinstrap,Dream,51.3,19.2,193.0,3650.0,Male\nChinstrap,Dream,45.4,18.7,188.0,3525.0,Female\nChinstrap,Dream,52.7,19.8,197.0,3725.0,Male\nChinstrap,Dream,45.2,17.8,198.0,3950.0,Female\nChinstrap,Dream,46.1,18.2,178.0,3250.0,Female\nChinstrap,Dream,51.3,18.2,197.0,3750.0,Male\nChinstrap,Dream,46.0,18.9,195.0,4150.0,Female\nChinstrap,Dream,51.3,19.9,198.0,3700.0,Male\nChinstrap,Dream,46.6,17.8,193.0,3800.0,Female\nChinstrap,Dream,51.7,20.3,194.0,3775.0,Male\nChinstrap,Dream,47.0,17.3,185.0,3700.0,Female\nChinstrap,Dream,52.0,18.1,201.0,4050.0,Male\nChinstrap,Dream,45.9,17.1,190.0,3575.0,Female\nChinstrap,Dream,50.5,19.6,201.0,4050.0,Male\nChinstrap,Dream,50.3,20.0,197.0,3300.0,Male\nChinstrap,Dream,58.0,17.8,181.0,3700.0,Female\nChinstrap,Dream,46.4,18.6,190.0,3450.0,Female\nChinstrap,Dream,49.2,18.2,195.0,4400.0,Male\nChinstrap,Dream,42.4,17.3,181.0,3600.0,Female\nChinstrap,Dream,48.5,17.5,191.0,3400.0,Male\nChinstrap,Dream,43.2,16.6,187.0,2900.0,Female\nChinstrap,Dream,50.6,19.4,193.0,3800.0,Male\nChinstrap,Dream,46.7,17.9,195.0,3300.0,Female\nChinstrap,Dream,52.0,19.0,197.0,4150.0,Male\nChinstrap,Dream,50.5,18.4,200.0,3400.0,Female\nChinstrap,Dream,49.5,19.0,200.0,3800.0,Male\nChinstrap,Dream,46.4,17.8,191.0,3700.0,Female\nChinstrap,Dream,52.8,20.0,205.0,4550.0,Male\nChinstrap,Dream,40.9,16.6,187.0,3200.0,Female\nChinstrap,Dream,54.2,20.8,201.0,4300.0,Male\nChinstrap,Dream,42.5,16.7,187.0,3350.0,Female\nChinstrap,Dream,51.0,18.8,203.0,4100.0,Male\nChinstrap,Dream,49.7,18.6,195.0,3600.0,Male\nChinstrap,Dream,47.5,16.8,199.0,3900.0,Female\nChinstrap,Dream,47.6,18.3,195.0,3850.0,Female\nChinstrap,Dream,52.0,20.7,210.0,4800.0,Male\nChinstrap,Dream,46.9,16.6,192.0,2700.0,Female\nChinstrap,Dream,53.5,19.9,205.0,4500.0,Male\nChinstrap,Dream,49.0,19.5,210.0,3950.0,Male\nChinstrap,Dream,46.2,17.5,187.0,3650.0,Female\nChinstrap,Dream,50.9,19.1,196.0,3550.0,Male\nChinstrap,Dream,45.5,17.0,196.0,3500.0,Female\nChinstrap,Dream,50.9,17.9,196.0,3675.0,Female\nChinstrap,Dream,50.8,18.5,201.0,4450.0,Male\nChinstrap,Dream,50.1,17.9,190.0,3400.0,Female\nChinstrap,Dream,49.0,19.6,212.0,4300.0,Male\nChinstrap,Dream,51.5,18.7,187.0,3250.0,Male\nChinstrap,Dream,49.8,17.3,198.0,3675.0,Female\nChinstrap,Dream,48.1,16.4,199.0,3325.0,Female\nChinstrap,Dream,51.4,19.0,201.0,3950.0,Male\nChinstrap,Dream,45.7,17.3,193.0,3600.0,Female\nChinstrap,Dream,50.7,19.7,203.0,4050.0,Male\nChinstrap,Dream,42.5,17.3,187.0,3350.0,Female\nChinstrap,Dream,52.2,18.8,197.0,3450.0,Male\nChinstrap,Dream,45.2,16.6,191.0,3250.0,Female\nChinstrap,Dream,49.3,19.9,203.0,4050.0,Male\nChinstrap,Dream,50.2,18.8,202.0,3800.0,Male\nChinstrap,Dream,45.6,19.4,194.0,3525.0,Female\nChinstrap,Dream,51.9,19.5,206.0,3950.0,Male\nChinstrap,Dream,46.8,16.5,189.0,3650.0,Female\nChinstrap,Dream,45.7,17.0,195.0,3650.0,Female\nChinstrap,Dream,55.8,19.8,207.0,4000.0,Male\nChinstrap,Dream,43.5,18.1,202.0,3400.0,Female\nChinstrap,Dream,49.6,18.2,193.0,3775.0,Male\nChinstrap,Dream,50.8,19.0,210.0,4100.0,Male\nChinstrap,Dream,50.2,18.7,198.0,3775.0,Female\nGentoo,Biscoe,46.1,13.2,211.0,4500.0,Female\nGentoo,Biscoe,50.0,16.3,230.0,5700.0,Male\nGentoo,Biscoe,48.7,14.1,210.0,4450.0,Female\nGentoo,Biscoe,50.0,15.2,218.0,5700.0,Male\nGentoo,Biscoe,47.6,14.5,215.0,5400.0,Male\nGentoo,Biscoe,46.5,13.5,210.0,4550.0,Female\nGentoo,Biscoe,45.4,14.6,211.0,4800.0,Female\nGentoo,Biscoe,46.7,15.3,219.0,5200.0,Male\nGentoo,Biscoe,43.3,13.4,209.0,4400.0,Female\nGentoo,Biscoe,46.8,15.4,215.0,5150.0,Male\nGentoo,Biscoe,40.9,13.7,214.0,4650.0,Female\nGentoo,Biscoe,49.0,16.1,216.0,5550.0,Male\nGentoo,Biscoe,45.5,13.7,214.0,4650.0,Female\nGentoo,Biscoe,48.4,14.6,213.0,5850.0,Male\nGentoo,Biscoe,45.8,14.6,210.0,4200.0,Female\nGentoo,Biscoe,49.3,15.7,217.0,5850.0,Male\nGentoo,Biscoe,42.0,13.5,210.0,4150.0,Female\nGentoo,Biscoe,49.2,15.2,221.0,6300.0,Male\nGentoo,Biscoe,46.2,14.5,209.0,4800.0,Female\nGentoo,Biscoe,48.7,15.1,222.0,5350.0,Male\nGentoo,Biscoe,50.2,14.3,218.0,5700.0,Male\nGentoo,Biscoe,45.1,14.5,215.0,5000.0,Female\nGentoo,Biscoe,46.5,14.5,213.0,4400.0,Female\nGentoo,Biscoe,46.3,15.8,215.0,5050.0,Male\nGentoo,Biscoe,42.9,13.1,215.0,5000.0,Female\nGentoo,Biscoe,46.1,15.1,215.0,5100.0,Male\nGentoo,Biscoe,44.5,14.3,216.0,4100.0,\nGentoo,Biscoe,47.8,15.0,215.0,5650.0,Male\nGentoo,Biscoe,48.2,14.3,210.0,4600.0,Female\nGentoo,Biscoe,50.0,15.3,220.0,5550.0,Male\nGentoo,Biscoe,47.3,15.3,222.0,5250.0,Male\nGentoo,Biscoe,42.8,14.2,209.0,4700.0,Female\nGentoo,Biscoe,45.1,14.5,207.0,5050.0,Female\nGentoo,Biscoe,59.6,17.0,230.0,6050.0,Male\nGentoo,Biscoe,49.1,14.8,220.0,5150.0,Female\nGentoo,Biscoe,48.4,16.3,220.0,5400.0,Male\nGentoo,Biscoe,42.6,13.7,213.0,4950.0,Female\nGentoo,Biscoe,44.4,17.3,219.0,5250.0,Male\nGentoo,Biscoe,44.0,13.6,208.0,4350.0,Female\nGentoo,Biscoe,48.7,15.7,208.0,5350.0,Male\nGentoo,Biscoe,42.7,13.7,208.0,3950.0,Female\nGentoo,Biscoe,49.6,16.0,225.0,5700.0,Male\nGentoo,Biscoe,45.3,13.7,210.0,4300.0,Female\nGentoo,Biscoe,49.6,15.0,216.0,4750.0,Male\nGentoo,Biscoe,50.5,15.9,222.0,5550.0,Male\nGentoo,Biscoe,43.6,13.9,217.0,4900.0,Female\nGentoo,Biscoe,45.5,13.9,210.0,4200.0,Female\nGentoo,Biscoe,50.5,15.9,225.0,5400.0,Male\nGentoo,Biscoe,44.9,13.3,213.0,5100.0,Female\nGentoo,Biscoe,45.2,15.8,215.0,5300.0,Male\nGentoo,Biscoe,46.6,14.2,210.0,4850.0,Female\nGentoo,Biscoe,48.5,14.1,220.0,5300.0,Male\nGentoo,Biscoe,45.1,14.4,210.0,4400.0,Female\nGentoo,Biscoe,50.1,15.0,225.0,5000.0,Male\nGentoo,Biscoe,46.5,14.4,217.0,4900.0,Female\nGentoo,Biscoe,45.0,15.4,220.0,5050.0,Male\nGentoo,Biscoe,43.8,13.9,208.0,4300.0,Female\nGentoo,Biscoe,45.5,15.0,220.0,5000.0,Male\nGentoo,Biscoe,43.2,14.5,208.0,4450.0,Female\nGentoo,Biscoe,50.4,15.3,224.0,5550.0,Male\nGentoo,Biscoe,45.3,13.8,208.0,4200.0,Female\nGentoo,Biscoe,46.2,14.9,221.0,5300.0,Male\nGentoo,Biscoe,45.7,13.9,214.0,4400.0,Female\nGentoo,Biscoe,54.3,15.7,231.0,5650.0,Male\nGentoo,Biscoe,45.8,14.2,219.0,4700.0,Female\nGentoo,Biscoe,49.8,16.8,230.0,5700.0,Male\nGentoo,Biscoe,46.2,14.4,214.0,4650.0,\nGentoo,Biscoe,49.5,16.2,229.0,5800.0,Male\nGentoo,Biscoe,43.5,14.2,220.0,4700.0,Female\nGentoo,Biscoe,50.7,15.0,223.0,5550.0,Male\nGentoo,Biscoe,47.7,15.0,216.0,4750.0,Female\nGentoo,Biscoe,46.4,15.6,221.0,5000.0,Male\nGentoo,Biscoe,48.2,15.6,221.0,5100.0,Male\nGentoo,Biscoe,46.5,14.8,217.0,5200.0,Female\nGentoo,Biscoe,46.4,15.0,216.0,4700.0,Female\nGentoo,Biscoe,48.6,16.0,230.0,5800.0,Male\nGentoo,Biscoe,47.5,14.2,209.0,4600.0,Female\nGentoo,Biscoe,51.1,16.3,220.0,6000.0,Male\nGentoo,Biscoe,45.2,13.8,215.0,4750.0,Female\nGentoo,Biscoe,45.2,16.4,223.0,5950.0,Male\nGentoo,Biscoe,49.1,14.5,212.0,4625.0,Female\nGentoo,Biscoe,52.5,15.6,221.0,5450.0,Male\nGentoo,Biscoe,47.4,14.6,212.0,4725.0,Female\nGentoo,Biscoe,50.0,15.9,224.0,5350.0,Male\nGentoo,Biscoe,44.9,13.8,212.0,4750.0,Female\nGentoo,Biscoe,50.8,17.3,228.0,5600.0,Male\nGentoo,Biscoe,43.4,14.4,218.0,4600.0,Female\nGentoo,Biscoe,51.3,14.2,218.0,5300.0,Male\nGentoo,Biscoe,47.5,14.0,212.0,4875.0,Female\nGentoo,Biscoe,52.1,17.0,230.0,5550.0,Male\nGentoo,Biscoe,47.5,15.0,218.0,4950.0,Female\nGentoo,Biscoe,52.2,17.1,228.0,5400.0,Male\nGentoo,Biscoe,45.5,14.5,212.0,4750.0,Female\nGentoo,Biscoe,49.5,16.1,224.0,5650.0,Male\nGentoo,Biscoe,44.5,14.7,214.0,4850.0,Female\nGentoo,Biscoe,50.8,15.7,226.0,5200.0,Male\nGentoo,Biscoe,49.4,15.8,216.0,4925.0,Male\nGentoo,Biscoe,46.9,14.6,222.0,4875.0,Female\nGentoo,Biscoe,48.4,14.4,203.0,4625.0,Female\nGentoo,Biscoe,51.1,16.5,225.0,5250.0,Male\nGentoo,Biscoe,48.5,15.0,219.0,4850.0,Female\nGentoo,Biscoe,55.9,17.0,228.0,5600.0,Male\nGentoo,Biscoe,47.2,15.5,215.0,4975.0,Female\nGentoo,Biscoe,49.1,15.0,228.0,5500.0,Male\nGentoo,Biscoe,47.3,13.8,216.0,4725.0,\nGentoo,Biscoe,46.8,16.1,215.0,5500.0,Male\nGentoo,Biscoe,41.7,14.7,210.0,4700.0,Female\nGentoo,Biscoe,53.4,15.8,219.0,5500.0,Male\nGentoo,Biscoe,43.3,14.0,208.0,4575.0,Female\nGentoo,Biscoe,48.1,15.1,209.0,5500.0,Male\nGentoo,Biscoe,50.5,15.2,216.0,5000.0,Female\nGentoo,Biscoe,49.8,15.9,229.0,5950.0,Male\nGentoo,Biscoe,43.5,15.2,213.0,4650.0,Female\nGentoo,Biscoe,51.5,16.3,230.0,5500.0,Male\nGentoo,Biscoe,46.2,14.1,217.0,4375.0,Female\nGentoo,Biscoe,55.1,16.0,230.0,5850.0,Male\nGentoo,Biscoe,44.5,15.7,217.0,4875.0,\nGentoo,Biscoe,48.8,16.2,222.0,6000.0,Male\nGentoo,Biscoe,47.2,13.7,214.0,4925.0,Female\nGentoo,Biscoe,,,,,\nGentoo,Biscoe,46.8,14.3,215.0,4850.0,Female\nGentoo,Biscoe,50.4,15.7,222.0,5750.0,Male\nGentoo,Biscoe,45.2,14.8,212.0,5200.0,Female\nGentoo,Biscoe,49.9,16.1,213.0,5400.0,Male\n", "type": "text"}, {"name": "shared.py", "content": "from pathlib import Path\n\nimport pandas as pd\n\napp_dir = Path(__file__).parent\ndf = pd.read_csv(app_dir / \"penguins.csv\")\n", "type": "text"}, {"name": "styles.css", "content": ":root {\n  --bslib-sidebar-main-bg: #f8f8f8;\n}", "type": "text"}]